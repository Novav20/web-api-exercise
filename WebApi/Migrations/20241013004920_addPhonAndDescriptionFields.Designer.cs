// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApiRouteResponses.Context;

#nullable disable

namespace WebApiRouteResponses.Migrations
{
    [DbContext(typeof(ApiDbContext))]
    [Migration("20241013004920_addPhonAndDescriptionFields")]
    partial class addPhonAndDescriptionFields
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebApiRouteResponses.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("User", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("9ae11445-5ba0-48ef-a227-198bbaa43f37"),
                            Active = true,
                            Age = 23,
                            CreationDate = new DateTime(2024, 10, 12, 19, 49, 20, 143, DateTimeKind.Local).AddTicks(1083),
                            LastName = "Julio",
                            Name = "Juan"
                        },
                        new
                        {
                            Id = new Guid("23723961-4278-4f31-8744-fbbf7dbc4572"),
                            Active = true,
                            Age = 22,
                            CreationDate = new DateTime(2024, 10, 12, 19, 49, 20, 143, DateTimeKind.Local).AddTicks(1108),
                            LastName = "Vera",
                            Name = "Vero"
                        },
                        new
                        {
                            Id = new Guid("28e24e4e-ce62-4371-9adf-d51bfd5e6964"),
                            Active = true,
                            Age = 23,
                            CreationDate = new DateTime(2024, 10, 12, 19, 49, 20, 143, DateTimeKind.Local).AddTicks(1109),
                            LastName = "Valdiviezo",
                            Name = "Yamileth"
                        });
                });

            modelBuilder.Entity("WebApiRouteResponses.Models.UserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserRole", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("4ba701c8-4be9-4843-958a-880506657ef7"),
                            Active = true,
                            Role = "Admin",
                            UserId = new Guid("9ae11445-5ba0-48ef-a227-198bbaa43f37")
                        },
                        new
                        {
                            Id = new Guid("53328b9f-6225-47db-a4a6-e230c6cba090"),
                            Active = true,
                            Role = "User",
                            UserId = new Guid("23723961-4278-4f31-8744-fbbf7dbc4572")
                        },
                        new
                        {
                            Id = new Guid("b7819cc9-b721-48b7-9ea1-36416c24cdd5"),
                            Active = true,
                            Role = "Support",
                            UserId = new Guid("28e24e4e-ce62-4371-9adf-d51bfd5e6964")
                        });
                });

            modelBuilder.Entity("WebApiRouteResponses.Models.UserRole", b =>
                {
                    b.HasOne("WebApiRouteResponses.Models.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebApiRouteResponses.Models.User", b =>
                {
                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
